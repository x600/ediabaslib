//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EdiabasLibConfigTool.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EdiabasLibConfigTool.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bluetooth init failed: {0}.
        /// </summary>
        internal static string BtInitError {
            get {
                return ResourceManager.GetString("BtInitError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Connection.
        /// </summary>
        internal static string ButtonTestCheck {
            get {
                return ResourceManager.GetString("ButtonTestCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adapter Configuration.
        /// </summary>
        internal static string ButtonTestConfiguration {
            get {
                return ResourceManager.GetString("ButtonTestConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect.
        /// </summary>
        internal static string ButtonTestConnect {
            get {
                return ResourceManager.GetString("ButtonTestConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adapter mode:.
        /// </summary>
        internal static string CanMode {
            get {
                return ResourceManager.GetString("CanMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to K-CAN.
        /// </summary>
        internal static string CanMode100 {
            get {
                return ResourceManager.GetString("CanMode100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D-CAN.
        /// </summary>
        internal static string CanMode500 {
            get {
                return ResourceManager.GetString("CanMode500", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic.
        /// </summary>
        internal static string CanModeAuto {
            get {
                return ResourceManager.GetString("CanModeAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing CAN mode to automatic.
        /// </summary>
        internal static string CanModeChangeAuto {
            get {
                return ResourceManager.GetString("CanModeChangeAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing CAN mode failed.
        /// </summary>
        internal static string CanModeChangeFailed {
            get {
                return ResourceManager.GetString("CanModeChangeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s recommended to use automatic adapter mode..
        /// </summary>
        internal static string CanModeNotAuto {
            get {
                return ResourceManager.GetString("CanModeNotAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to K-LINE.
        /// </summary>
        internal static string CanModeOff {
            get {
                return ResourceManager.GetString("CanModeOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string CanModeUnknown {
            get {
                return ResourceManager.GetString("CanModeUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected.
        /// </summary>
        internal static string Connected {
            get {
                return ResourceManager.GetString("Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting ....
        /// </summary>
        internal static string Connecting {
            get {
                return ResourceManager.GetString("Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection failed.
        /// </summary>
        internal static string ConnectionFailed {
            get {
                return ResourceManager.GetString("ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a device to perform an operation..
        /// </summary>
        internal static string DevicesFound {
            get {
                return ResourceManager.GetString("DevicesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No devices found..
        /// </summary>
        internal static string DevicesNotFound {
            get {
                return ResourceManager.GetString("DevicesNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnected Wi-Fi adapter.
        /// </summary>
        internal static string DisconnectedAdapter {
            get {
                return ResourceManager.GetString("DisconnectedAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The adapter is using the ELM327 firmware, only the replacement firmware is supported..
        /// </summary>
        internal static string ElmAdapterConnected {
            get {
                return ResourceManager.GetString("ElmAdapterConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware too old, please update firmware with Deep OBD App..
        /// </summary>
        internal static string FirmwareTooOld {
            get {
                return ResourceManager.GetString("FirmwareTooOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware:.
        /// </summary>
        internal static string FirmwareVersion {
            get {
                return ResourceManager.GetString("FirmwareVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The adapter is using the ELM327 firmware, please flash the replacement firmware with the app first..
        /// </summary>
        internal static string FlashReplacementFirmware {
            get {
                return ResourceManager.GetString("FlashReplacementFirmware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP response invalid.
        /// </summary>
        internal static string HttpResponseIncorrect {
            get {
                return ResourceManager.GetString("HttpResponseIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP response OK.
        /// </summary>
        internal static string HttpResponseOk {
            get {
                return ResourceManager.GetString("HttpResponseOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deutsch.
        /// </summary>
        internal static string LanguageDe {
            get {
                return ResourceManager.GetString("LanguageDe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English.
        /// </summary>
        internal static string LanguageEn {
            get {
                return ResourceManager.GetString("LanguageEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pусский.
        /// </summary>
        internal static string LanguageRu {
            get {
                return ResourceManager.GetString("LanguageRu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EdiabasLib {0} file is missing..
        /// </summary>
        internal static string PatchApiDllMissing {
            get {
                return ResourceManager.GetString("PatchApiDllMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API version: {0}.
        /// </summary>
        internal static string PatchApiVersion {
            get {
                return ResourceManager.GetString("PatchApiVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup file {0} is already existing..
        /// </summary>
        internal static string PatchBackupFileExisting {
            get {
                return ResourceManager.GetString("PatchBackupFileExisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EdiabasLib.config file is already existing..
        /// </summary>
        internal static string PatchConfigExisting {
            get {
                return ResourceManager.GetString("PatchConfigExisting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EdiabasLib.config file is missing..
        /// </summary>
        internal static string PatchConfigMissing {
            get {
                return ResourceManager.GetString("PatchConfigMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update config file failed..
        /// </summary>
        internal static string PatchConfigUpdateFailed {
            get {
                return ResourceManager.GetString("PatchConfigUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update config file successful..
        /// </summary>
        internal static string PatchConfigUpdateOk {
            get {
                return ResourceManager.GetString("PatchConfigUpdateOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy files failed..
        /// </summary>
        internal static string PatchCopyFailed {
            get {
                return ResourceManager.GetString("PatchCopyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No VC runtime files installed, copying files locally..
        /// </summary>
        internal static string PatchCopyRuntime {
            get {
                return ResourceManager.GetString("PatchCopyRuntime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating backup file {0}..
        /// </summary>
        internal static string PatchCreateBackupFile {
            get {
                return ResourceManager.GetString("PatchCreateBackupFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patching EDIABAS at: &apos;{0}&apos;.
        /// </summary>
        internal static string PatchDirectory {
            get {
                return ResourceManager.GetString("PatchDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hint: In ISTA-D Administration -&gt; VCI Config select as Interface type:
        ///Ediabas default settings (ediabas.ini)..
        /// </summary>
        internal static string PatchInstadInfo {
            get {
                return ResourceManager.GetString("PatchInstadInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load {0}. Has the archive been extracted correctly?.
        /// </summary>
        internal static string PatchLoadApiDllFailed {
            get {
                return ResourceManager.GetString("PatchLoadApiDllFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} backup file is not valid..
        /// </summary>
        internal static string PatchNoValidBackupFile {
            get {
                return ResourceManager.GetString("PatchNoValidBackupFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hint: In VAS-PC only &quot;Guided Fault Finding&quot; and &quot;Guided Functions&quot;
        ///are supported with EdiabasLib..
        /// </summary>
        internal static string PatchVaspcInfo {
            get {
                return ResourceManager.GetString("PatchVaspcInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read firmware version failed.
        /// </summary>
        internal static string ReadFirmwareVersionFailed {
            get {
                return ResourceManager.GetString("ReadFirmwareVersionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read adapter mode failed.
        /// </summary>
        internal static string ReadModeFailed {
            get {
                return ResourceManager.GetString("ReadModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring original {0} file failed..
        /// </summary>
        internal static string RestoreApiDllFailed {
            get {
                return ResourceManager.GetString("RestoreApiDllFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restored original {0} file..
        /// </summary>
        internal static string RestoredApiDll {
            get {
                return ResourceManager.GetString("RestoredApiDll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring EDIABAS at: &apos;{0}&apos;.
        /// </summary>
        internal static string RestoreDirectory {
            get {
                return ResourceManager.GetString("RestoreDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No backup file {0} existing..
        /// </summary>
        internal static string RestoreNoBackupFile {
            get {
                return ResourceManager.GetString("RestoreNoBackupFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching ....
        /// </summary>
        internal static string Searching {
            get {
                return ResourceManager.GetString("Searching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching failed.
        /// </summary>
        internal static string SearchingFailed {
            get {
                return ResourceManager.GetString("SearchingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching failed: {0}.
        /// </summary>
        internal static string SearchingFailedMessage {
            get {
                return ResourceManager.GetString("SearchingFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test OK.
        /// </summary>
        internal static string TestOk {
            get {
                return ResourceManager.GetString("TestOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Wi-Fi adapter found..
        /// </summary>
        internal static string WifiAdapterError {
            get {
                return ResourceManager.GetString("WifiAdapterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The adapter configuration page will be opened in the web browser.
        ///The default root password is {0}..
        /// </summary>
        internal static string WifiUrlOk {
            get {
                return ResourceManager.GetString("WifiUrlOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write adapter mode failed.
        /// </summary>
        internal static string WriteModeFailed {
            get {
                return ResourceManager.GetString("WriteModeFailed", resourceCulture);
            }
        }
    }
}
